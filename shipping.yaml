- name: shipping setup
  hosts: shipping
  become: yes
  tasks:
    - name: Install maven
      ansible.builtin.yum:
        name: maven
        state: present
    - name: check roboshop user exit or not
      ansible.builtin.command: id roboshop
      register: output
      ignore_errors: True
    - name: Create a roboshop user 
      ansible.builtin.user:
        name: roboshop
      when: output.rc!=0
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /app/
        state: directory
    - name: Download shipping.zip
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp/shipping.zip
    - name: unzip shipping.zip file
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app/
        remote_src: yes
    - name: install dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app/
    - name: move jar file from target directory
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
      chdir: /app
    - name: copy shipping service file
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/
    - name: enable and start shipping service
      ansible.builtin.systemd_service:
        state: started
        daemon_reload: true
        enabled: yes
        name: shipping
    - name: copy mongodb repo file
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/
    - name: Install mysql client
      ansible.builtin.yum:
        name: mysql
        state: present
    - name: Load schema
      ansible.builtin.shell: mysql -h mysql.nareshdevops.online -uroot -pRoboShop@1 < /app/schema/shipping.sql
    - name: restart shipping service
      ansible.builtin.systemd_service:
        state: restarted
        name: shipping

    
    
